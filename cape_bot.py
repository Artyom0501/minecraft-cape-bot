import telebot
import requests
import schedule
import time
import threading
import os
from http.server import HTTPServer, BaseHTTPRequestHandler

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ ===
TOKEN = '8093048403:AAHLQNTB_y9DDDORl5WtV8hqgl_cAh-5nnk'  # —Ç–≤–æ–π —Ç–æ–∫–µ–Ω
CHAT_ID = '6399778317'  # —Ç–≤–æ–π chat_id
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–ª–∞—â–µ–π
known_capes = set()

# === –¢–í–û–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –ü–õ–ê–©–ï–ô ===
def check_new_capes():
    global known_capes
    try:
        response = requests.get('https://capes.dev/api/capes')
        data = response.json()

        new_found = False
        for cape in data:
            if cape['id'] not in known_capes:
                new_found = True
                known_capes.add(cape['id'])

                name = cape.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                img = cape.get('image', '')

                bot.send_message(CHAT_ID, f"üß• –û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–æ–≤—ã–π –ø–ª–∞—â: *{name}*", parse_mode="Markdown")

                if img.endswith(('.png', '.jpg', '.jpeg', '.webp')):
                    bot.send_photo(CHAT_ID, img) 
                else:
                    bot.send_message(CHAT_ID, f"‚ö†Ô∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è:\n{img}")
        
        if not new_found:
            print("–ù–æ–≤—ã—Ö –ø–ª–∞—â–µ–π –Ω–µ—Ç.")
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–æ–≤—ã—Ö –ø–ª–∞—â–µ–π:", e)

# === –†–ê–°–ü–ò–°–ê–ù–ò–ï –ü–†–û–í–ï–†–û–ö ===
schedule.every(1).day.do(check_new_capes)

def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(1)

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î –ë–û–¢–ê ===
@bot.message_handler(commands=['start', '–ø–ª–∞—â'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤—ã–µ –ø–ª–∞—â–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è!")

@bot.message_handler(commands=['cape'])
def send_cape(message):
    bot.send_message(message.chat.id, "üß• *Vanilla Cape*\n\n–≠—Ç–æ—Ç –ø–ª–∞—â –≤—ã–¥–∞–≤–∞–ª—Å—è –∏–≥—Ä–æ–∫–∞–º, —É –∫–æ—Ç–æ—Ä—ã—Ö –±—ã–ª–∏ –∏ Java, –∏ Bedrock –≤–µ—Ä—Å–∏–∏ Minecraft –¥–æ 6 –∏—é–Ω—è 2022 –≥–æ–¥–∞.", parse_mode="Markdown")
    bot.send_photo(message.chat.id, 'https://static.wikia.nocookie.net/minecraft_gamepedia/images/7/77/Vanilla_Cape.png')

@bot.message_handler(commands=['test_cape'])
def test_cape(message):
    name = "Vanilla Cape"
    img = "https://ru.minecraft.wiki/images/Vanilla_cape.png?1d440"
    bot.send_message(message.chat.id, f"üß• {name}")
    bot.send_photo(message.chat.id, img)

@bot.message_handler(commands=['ping'])
def ping_command(message):
    bot.send_message(message.chat.id, "üèì Pong!")

# === –ü–†–û–°–¢–û–ô HTTP-–°–ï–†–í–ï–† –î–õ–Ø Render ===
PORT = int(os.environ.get("PORT", 8000))

class SimpleHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b"Bot is running")

def run_server():
    server = HTTPServer(('0.0.0.0', PORT), SimpleHandler)
    print(f"Starting HTTP server on port {PORT}")
    server.serve_forever()

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_server, daemon=True).start()

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=run_schedule, daemon=True).start()

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (–±–ª–æ–∫–∏—Ä—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
bot.polling()
