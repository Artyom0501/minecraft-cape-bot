import telebot
import requests
import schedule
import time
import threading
import os
from http.server import HTTPServer, BaseHTTPRequestHandler
from bs4 import BeautifulSoup

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
TOKEN = os.environ.get('TELEGRAM_TOKEN')
ALLOWED_USERS = os.environ.get('ALLOWED_USERS', '')
PORT = int(os.environ.get("PORT", 8000))

# –†–∞–∑–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—É ALLOWED_USERS –≤ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö ID
# (–Ω–∞–ø—Ä–∏–º–µ—Ä: "12345678,87654321" ‚Üí ["12345678", "87654321"])
allowed_users = [uid.strip() for uid in ALLOWED_USERS.split(',') if uid.strip().isdigit()]

bot = telebot.TeleBot(TOKEN)
known_capes = set()  # —Ç—É—Ç —Ö—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ ¬´–≤–∏–¥–µ–ª–∏¬ª

# === –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏ —Ä–∞—Å—Å—ã–ª–∫–∏ ===
def check_new_capes(triggered_by_command=False, trigger_user_id=None):
    global known_capes
    print("üîç [LOG] –ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞ Minecraft.net...")

    try:
        url = 'https://www.minecraft.net/ru-ru'
        response = requests.get(url)
        if response.status_code != 200:
            raise Exception(f"HTTP {response.status_code}")

        soup = BeautifulSoup(response.text, 'html.parser')
        articles = soup.find_all('a', class_='card')
        print(f"üîç [LOG] –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ {len(articles)} –∫–∞—Ä—Ç–æ—á–µ–∫ a.card –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.")

        new_found = False
        found_articles = []  # –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ (title, link)

        for article in articles:
            title = article.get_text(strip=True)
            href = article.get('href')
            link = 'https://www.minecraft.net' + href if href.startswith('/') else href

            # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
            lower_title = title.lower()
            if '–ø–ª–∞—â' in lower_title or 'cape' in lower_title or '—Å–∫–∏–Ω' in lower_title or '–ø–æ–¥–∞—Ä–æ–∫' in lower_title:
                found_articles.append((title, link))
                if link not in known_capes:
                    known_capes.add(link)
                    new_found = True
                    print(f"‚úÖ [LOG] –ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è: {title} ‚Üí {link}")
                    # –†–∞—Å—Å—ã–ª–∞–µ–º –∫–∞–∂–¥–æ–º—É –∏–∑ allowed_users
                    for user_id in allowed_users:
                        try:
                            bot.send_message(
                                int(user_id),
                                f"üß• –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è —Å—Ç–∞—Ç—å—è:\n*{title}*\n{link}",
                                parse_mode="Markdown"
                            )
                        except Exception as send_exc:
                            print(f"‚ùå [LOG] –ù–µ —Å–º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {send_exc}")

        # –ï—Å–ª–∏ –≤—ã–∑–≤–∞–Ω–æ –≤—Ä—É—á–Ω—É—é (triggered_by_command=True), –≤—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö, –¥–∞–∂–µ –µ—Å–ª–∏ —Å—Ç–∞—Ä—ã–µ
        if triggered_by_command and trigger_user_id:
            if found_articles:
                bot.send_message(trigger_user_id, f"üîç –ù–∞–π–¥–µ–Ω–æ {len(found_articles)} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å—Ç–∞—Ç–µ–π:")
                for title, link in found_articles:
                    bot.send_message(trigger_user_id, f"*{title}*\n{link}", parse_mode="Markdown")
            else:
                bot.send_message(trigger_user_id, "üîç –°—Ç–∞—Ç–µ–π —Å –ø–ª–∞—â–∞–º–∏, —Å–∫–∏–Ω–∞–º–∏ –∏–ª–∏ –ø–æ–¥–∞—Ä–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            print("üîç [LOG] –†—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä—É).")

        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∏ –Ω–æ–≤—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî —à–ª–µ–º ¬´–Ω–µ—Ç –Ω–æ–≤—ã—Ö¬ª –≤—Å–µ–º allowed_users
        elif not new_found:
            for user_id in allowed_users:
                try:
                    bot.send_message(int(user_id), "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞ Minecraft.net...\n–ù–æ–≤—ã—Ö –ø–ª–∞—â–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
                except Exception as send_exc:
                    print(f"‚ùå [LOG] –ù–µ —Å–º–æ–≥–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {send_exc}")
            print("‚ÑπÔ∏è [LOG] –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚Äî –Ω–æ–≤—ã—Ö —Å—Ç–∞—Ç–µ–π –Ω–µ –±—ã–ª–æ.")

        else:
            print("‚úÖ [LOG] –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞: –Ω–æ–≤—ã–µ —Å—Ç–∞—Ç—å–∏ —É–∂–µ —Ä–∞–∑–æ—Å–ª–∞–Ω—ã.")
    except Exception as e:
        print("‚ùå [LOG] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:", e)
        # –ï—Å–ª–∏ —ç—Ç–æ –≤—ã–∑–æ–≤ –∏–∑ /check ‚Äî —É–≤–µ–¥–æ–º–∏—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–æ—Ä–∞ –æ–± –æ—à–∏–±–∫–µ
        if triggered_by_command and trigger_user_id:
            try:
                bot.send_message(trigger_user_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∞–π—Ç–∞: {e}")
            except:
                pass

# === –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç ===
schedule.every(30).minutes.do(check_new_capes)

def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(1)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞, —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–ø–æ–ª–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—ã ===
def is_allowed(user_id):
    return str(user_id) in allowed_users

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ ===
@bot.message_handler(commands=['start', '–ø–ª–∞—â'])
def send_welcome(message):
    if not is_allowed(message.chat.id):
        bot.reply_to(message, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        print(f"üë§ [LOG] –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.chat.id}")
        return
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤—ã–µ –ø–ª–∞—â–∏, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è!")

@bot.message_handler(commands=['ping'])
def ping_command(message):
    if not is_allowed(message.chat.id):
        return
    bot.send_message(message.chat.id, "üèì Pong!")

@bot.message_handler(commands=['check'])
def manual_check(message):
    if not is_allowed(message.chat.id):
        bot.reply_to(message, "‚õîÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
        print(f"‚õîÔ∏è [LOG] –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ /check –æ—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω–æ–≥–æ {message.chat.id}")
        return

    bot.send_message(message.chat.id, "üîç –í—ã–ø–æ–ª–Ω—è—é —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å–∞–π—Ç–∞ Minecraft.net...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞
    threading.Thread(
        target=check_new_capes,
        kwargs={"triggered_by_command": True, "trigger_user_id": message.chat.id},
        daemon=True
    ).start()

# === –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π) ===
@bot.message_handler(func=lambda message: True)
def any_message(message):
    print(f"üë§ [LOG] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.chat.id} –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# === –ü—Ä–æ—Å—Ç–æ–π HTTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã Render –Ω–µ ¬´–∑–∞—Å—ã–ø–∞–ª¬ª ===
class SimpleHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.end_headers()
        self.wfile.write(b"Bot is running")

def run_server():
    server = HTTPServer(('0.0.0.0', PORT), SimpleHandler)
    print(f"üåê [LOG] HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    server.serve_forever()

# === –°—Ç–∞—Ä—Ç—É–µ–º HTTP-—Å–µ—Ä–≤–µ—Ä –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –ø–æ—Ç–æ–∫–∞—Ö, –∑–∞—Ç–µ–º –≤–∫–ª—é—á–∞–µ–º polling() ===
threading.Thread(target=run_server, daemon=True).start()
threading.Thread(target=run_schedule, daemon=True).start()

bot.polling()
